{
  "stats": {
    "suites": 1,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2018-12-13T15:21:26.492Z",
    "end": "2018-12-13T15:21:27.161Z",
    "duration": 669,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "dee17e40-6666-4159-a5c6-2186d0cd3dd9",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "8cb5e98d-0261-41ba-997c-82b28bd8466c",
        "title": "Testing  User",
        "fullFile": "/home/brightmoon/git/firewall/test/unit/user.js",
        "file": "/test/unit/user.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Login user",
            "fullTitle": "Testing  User Login user",
            "timedOut": false,
            "duration": 109,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"wafaa gamal\\\",\\\"password\\\":\\\"pass@2012\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"user\\\":{\\\"_id\\\":\\\"5c1278abc750376dab37393a\\\",\\\"fullname\\\":\\\"wafaa gamal\\\",\\\"__v\\\":0,\\\"resetedPass\\\":false,\\\"createdAt\\\":\\\"2018-12-13T15:20:11.869Z\\\",\\\"updatedAt\\\":\\\"2018-12-13T15:20:11.870Z\\\",\\\"role\\\":\\\"admin\\\"},\\\"ticket\\\":\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjVjMTI3OGFiYzc1MDM3NmRhYjM3MzkzYSIsInJvbGUiOiJhZG1pbiJ9LCJzZXNzaW9uIjp7InVybiI6MTg1NDE0NzY2LCJleHAiOjE1NDczMDY0ODYwMDAwMDAsImlhdCI6MTU0NDcxNDQ4NjAwMDAwMH0sImlhdCI6MTU0NDcxNDQ4Nn0.8LqkDJmkut2htzBf7IfbyFhrpbTVSN-xe-qUeBEufVQ\\\"}\"\n  }\n]",
            "code": "var context=this\nserver  \n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(200)\n.end(function (err, res) {\n  if (res.body){\n    //console.log(res.body);\n    \n    ticket=res.body.ticket\n    res.status.should.equal(200);\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "4d68de68-798d-4261-837d-663d231274db",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "reset Password",
            "fullTitle": "Testing  User reset Password",
            "timedOut": false,
            "duration": 355,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"*Iq6?Ez2!Mf0!Rh9!Wk8\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"message\\\":\\\"successfully reseted\\\"}\"\n  }\n]",
            "code": "var context=this\n//console.log(ticket);\n    server\n    .post('/reset/password')\n    .set('ticket',ticket)\n    .send({ \n password: helper.generate('mix',20)\n })\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\nif (res.body) {\n// console.log(res.body);\n   res.status.should.equal(200);\n done();\n   addContext(context, {\n     title: 'sent object',\n     value: JSON.stringify({ \n       password: helper.generate('mix',20)\n     })\n });\n addContext(context, {\n     title: 'response object',\n     value: JSON.stringify(res.body)\n });\n }\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "544410c6-34b6-41a6-b4a0-31cb0276ec1a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "add new Admin",
            "fullTitle": "Testing  User add new Admin",
            "timedOut": false,
            "duration": 78,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"MbScHs IpStYa\\\",\\\"password\\\":\\\"$Fi0&Ex3*Dg8@Uy1@Bp9\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"admin\\\":{\\\"createdBy\\\":\\\"5c1278abc750376dab37393a\\\",\\\"password\\\":\\\"$2a$10$1mDi6wrmXqVxgIf/UH6knu7s3fANvCn90E6GGF.MV15Yd3BByCvsm\\\",\\\"fullname\\\":\\\"MbScHs IpStYa\\\",\\\"_id\\\":\\\"5c1278f6e7c4626e57b1c5b7\\\",\\\"resetedPass\\\":false,\\\"createdAt\\\":\\\"2018-12-13T15:21:27.047Z\\\",\\\"updatedAt\\\":\\\"2018-12-13T15:21:26.978Z\\\",\\\"role\\\":\\\"admin\\\"}}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\n  server\n  .post('/add/admin')\n  .set(\"ticket\",ticket)\n  .send(currentUser)\n  .expect(\"Content-type\",/json/)\n  .expect(200)\n  .end(function(err,res){\n      if(res.body){\n          res.status.should.equal(200);\n          done()\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify(currentUser)\n        });\n\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n      }\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "98963ab3-4195-41ef-a586-19aa37f7cc6d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "add new Admin",
            "fullTitle": "Testing  User add new Admin",
            "timedOut": false,
            "duration": 79,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"FwJkHr WhYvSc\\\",\\\"password\\\":\\\"%Mr3!Qe9!Kq7@Cs3!Pk2\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"stackholder\\\":{\\\"createdBy\\\":\\\"5c1278abc750376dab37393a\\\",\\\"password\\\":\\\"$2a$10$/M3u1Plf4PzjfpYIVqZXPOGGdCoNr25t3BmTDlI3fBNUY2IEOGDD.\\\",\\\"fullname\\\":\\\"FwJkHr WhYvSc\\\",\\\"_id\\\":\\\"5c1278f7e7c4626e57b1c5b8\\\",\\\"resetedPass\\\":false,\\\"createdAt\\\":\\\"2018-12-13T15:21:27.126Z\\\",\\\"updatedAt\\\":\\\"2018-12-13T15:21:27.057Z\\\",\\\"role\\\":\\\"stackholder\\\"}}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\n  server\n  .post('/add/stackholder')\n  .set(\"ticket\",ticket)\n  .send(currentUser)\n  .expect(\"Content-type\",/json/)\n  .expect(200)\n  .end(function(err,res){\n      if(res.body){\n          res.status.should.equal(200);\n          done()\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify(currentUser)\n        });\n\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n      }\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "7aac5925-caaf-45f1-9d8a-d8a144c43fa3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname Length too short",
            "fullTitle": "Testing  User should return invalid fullname Length too short",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"Jy\\\",\\\"password\\\":\\\"*Pe7$Vc8&Xm3$Qz1%Jj7\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=helper.generate(\"all-alpha\",2)\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n   if (res.body){  \n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d632da08-e239-44e3-bb92-427c71276b2c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname",
            "fullTitle": "Testing  User should return invalid fullname",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"tkmycw\\\",\\\"password\\\":\\\"&Yw3!Ge8?Xp2%Sr6$Yb7\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=helper.generate('lalpha',6)\n  server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body) {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n}\n});",
            "err": {},
            "isRoot": false,
            "uuid": "1af0140d-8e9c-4fb7-80e8-baeef4540ca1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname format",
            "fullTitle": "Testing  User should return invalid fullname format",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"*Ts2!Li0!W\\\",\\\"password\\\":\\\"@Yw4%Ew7?Pi4!Jw7&Au9\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\n      currentUser=generateUser()\n      currentUser.fullname=helper.generate(\"mix\",10)\n          server\n      .post('/login')\n      .send(currentUser)\n      .expect(\"Content-type\", /json/)\n      .expect(400)\n      .end(function (err, res) {\n        if (res.body){\n          res.status.should.equal(400)\n        done();\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify(currentUser)\n        });\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n        }\n      });",
            "err": {},
            "isRoot": false,
            "uuid": "595e4b35-2a4c-4814-b2bc-55bf95e68454",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return required fullname",
            "fullTitle": "Testing  User should return required fullname",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"?Bn3$Eq4@Iw3*Cq1%Bc4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"missing params\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=undefined\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body)  {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "efed8536-a633-4332-a8fa-1be11b5a1d2a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname length ",
            "fullTitle": "Testing  User should return invalid fullname length ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"rghuqy rglbxi lixvhu yueydw piaiwn tqtzap affekd kjksuy fpnocm\\\",\\\"password\\\":\\\"$Zy0@Ah1%Si6$Ye2$Uj1\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=helper.generate('lalpha',6) + \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)+ \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)+ \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)+ \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body) {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f66f906e-c7d9-4d49-a644-86bd0701129d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid user password length",
            "fullTitle": "Testing  User should return invalid user password length",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"ZwBjMw XiQtVi\\\",\\\"password\\\":\\\"&En7!\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"},{\\\"msg\\\":\\\"invalid length\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=helper.generate('mix',5)\n  \n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body){\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "1ab89f68-33f2-430c-bd42-72cc2d14ea52",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error user password required",
            "fullTitle": "Testing  User should return error user password required",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"VvDoIl IoJtEe\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"missing params\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=undefined\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body) {\n    res.status.should.equal(400)\n  done();\n      addContext(context, {\n        title: 'sent object',\n        value: JSON.stringify(currentUser)\n    });\n    addContext(context, {\n        title: 'response object',\n        value: JSON.stringify(res.body)\n    });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "df264d3c-f52b-4fb7-a95d-12dbb3e67c97",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error invalid user password format",
            "fullTitle": "Testing  User should return error invalid user password format",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"MgPiZs WbFtRu\\\",\\\"password\\\":\\\"idvnbcnulmrvmtv\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=helper.generate(\"lalpha\",15)\n     \n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body)  {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "dab85347-42d5-437f-880b-6a37fdc2fb4b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error invalid user password format(numeric)",
            "fullTitle": "Testing  User should return error invalid user password format(numeric)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"AcZjXy OmIiMp\\\",\\\"password\\\":\\\"774604248792227\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=helper.generate(\"numeric\",15)\n\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body){\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5677e82f-cf83-4978-a473-c6e89ab077ec",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid ticket won't reset Password",
            "fullTitle": "Testing  User should return invalid ticket won't reset Password",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"?Dd5*Bk7!Wx4*Zo8*Hc4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n    server\n    .post('/reset/password')\n    .set('ticket',ticket+1)\n    .send({\n        password: helper.generate('mix',20)\n    })\n    .expect(\"Content-type\", /json/)\n    .expect(401)\n    .end(function (err, res) {\n      \n      if (res){\n        // console.log(res.body);\n        \n        res.status.should.equal(401);\n      done();\n        addContext(context, {\n          title: 'sent object',\n          value: JSON.stringify({ \n            password: helper.generate('mix',20)\n          })\n      });\n      addContext(context, {\n          title: 'response object',\n          value: JSON.stringify({})\n      });\n      }\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "bf5044d4-941c-41ec-b3bb-13c3d1835c51",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid ticket won't add new admin",
            "fullTitle": "Testing  User should return invalid ticket won't add new admin",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"?Rv5*Fc1?Nj3&Dv3*Yj9\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n   currentUser=generateUser()\n   server\n   .post('/add/admin')\n   .set('ticket',ticket+1)\n   .send(currentUser)\n   .expect(\"Content-type\", /json/)\n   .expect(401)\n   .end(function (err, res) {\n     \n     if (res){\n       res.status.should.equal(401);\n     done();\n       addContext(context, {\n         title: 'sent object',\n         value: JSON.stringify({ \n           password: helper.generate('mix',20)\n         })\n     });\n     addContext(context, {\n         title: 'response object',\n         value: JSON.stringify({})\n     });\n     }\n   });",
            "err": {},
            "isRoot": false,
            "uuid": "bb1f89e8-32de-44e2-b38f-eebbab660354",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid ticket won't add new stackholder",
            "fullTitle": "Testing  User should return invalid ticket won't add new stackholder",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"!Qe6&Dn7@Eb2&Jh1@Qa1\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n   currentUser=generateUser()\n  // console.log(currentUser);\n   \n   server\n   .post('/add/stackholder')\n   .set('ticket',ticket+1)\n   .send({currentUser})\n   .expect(\"Content-type\", /json/)\n   .expect(401)\n   .end(function (err, res) {\n     \n     if (res){\n       res.status.should.equal(401);\n     done();\n       addContext(context, {\n         title: 'sent object',\n         value: JSON.stringify({ \n           password: helper.generate('mix',20)\n         })\n     });\n     addContext(context, {\n         title: 'response object',\n         value: JSON.stringify({})\n     });\n     }\n   });",
            "err": {},
            "isRoot": false,
            "uuid": "d713c264-7d65-43f2-ae74-f2aa884c8089",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4d68de68-798d-4261-837d-663d231274db",
          "544410c6-34b6-41a6-b4a0-31cb0276ec1a",
          "98963ab3-4195-41ef-a586-19aa37f7cc6d",
          "7aac5925-caaf-45f1-9d8a-d8a144c43fa3",
          "d632da08-e239-44e3-bb92-427c71276b2c",
          "1af0140d-8e9c-4fb7-80e8-baeef4540ca1",
          "595e4b35-2a4c-4814-b2bc-55bf95e68454",
          "efed8536-a633-4332-a8fa-1be11b5a1d2a",
          "f66f906e-c7d9-4d49-a644-86bd0701129d",
          "1ab89f68-33f2-430c-bd42-72cc2d14ea52",
          "df264d3c-f52b-4fb7-a95d-12dbb3e67c97",
          "dab85347-42d5-437f-880b-6a37fdc2fb4b",
          "5677e82f-cf83-4978-a473-c6e89ab077ec",
          "bf5044d4-941c-41ec-b3bb-13c3d1835c51",
          "bb1f89e8-32de-44e2-b38f-eebbab660354",
          "d713c264-7d65-43f2-ae74-f2aa884c8089"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 650,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}