{
  "stats": {
    "suites": 1,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2018-12-15T12:20:08.889Z",
    "end": "2018-12-15T12:20:09.587Z",
    "duration": 698,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "d97ff3d4-760b-471d-8adb-d8fb270b849e",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "7a84acf5-f73c-4dd0-9609-f2ba4295b0f5",
        "title": "Testing  User",
        "fullFile": "/home/brightmoon/git/firewall/test/unit/user.js",
        "file": "/test/unit/user.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Login user",
            "fullTitle": "Testing  User Login user",
            "timedOut": false,
            "duration": 101,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"wafaa gamal\\\",\\\"password\\\":\\\"pass@2012\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"user\\\":{\\\"_id\\\":\\\"5c14f1666e76ab22f8fa18a9\\\",\\\"fullname\\\":\\\"wafaa gamal\\\",\\\"__v\\\":0,\\\"resetedPass\\\":false,\\\"createdAt\\\":\\\"2018-12-15T12:19:50.258Z\\\",\\\"updatedAt\\\":\\\"2018-12-15T12:19:50.259Z\\\",\\\"role\\\":\\\"admin\\\"},\\\"ticket\\\":\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjVjMTRmMTY2NmU3NmFiMjJmOGZhMThhOSIsInJvbGUiOiJhZG1pbiJ9LCJzZXNzaW9uIjp7InVybiI6MTYzNjAwMjY4LCJleHAiOjE1NDc0Njg0MDgwMDAwMDAsImlhdCI6MTU0NDg3NjQwODAwMDAwMH0sImlhdCI6MTU0NDg3NjQwOH0.k7yhHvTlhabLcQhFD2sbOnx7EDK4m-sy65wjChvWSYo\\\"}\"\n  }\n]",
            "code": "var context=this\nserver  \n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(200)\n.end(function (err, res) {\n  if (res.body){\n    //console.log(res.body);\n    \n    ticket=res.body.ticket\n    res.status.should.equal(200);\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "fe68e25b-305d-46db-9c8c-88326b574d53",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "reset Password",
            "fullTitle": "Testing  User reset Password",
            "timedOut": false,
            "duration": 417,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"?Oa2%Aa7&Yq3!Fw8@Ou9\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"message\\\":\\\"successfully reseted\\\"}\"\n  }\n]",
            "code": "var context=this\n//console.log(ticket);\n    server\n    .post('/reset/password')\n    .set('ticket',ticket)\n    .send({ \n password: helper.generate('mix',20)\n })\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\nif (res.body) {\n// console.log(res.body);\n   res.status.should.equal(200);\n done();\n   addContext(context, {\n     title: 'sent object',\n     value: JSON.stringify({ \n       password: helper.generate('mix',20)\n     })\n });\n addContext(context, {\n     title: 'response object',\n     value: JSON.stringify(res.body)\n });\n }\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "f91549f3-17d7-407b-b7be-b9a45cb0bbac",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "add new Admin",
            "fullTitle": "Testing  User add new Admin",
            "timedOut": false,
            "duration": 75,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"PtIqRq PoHiOq\\\",\\\"password\\\":\\\"$Zj7*Le1@Es7!Wz7@So0\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"admin\\\":{\\\"role\\\":\\\"admin\\\",\\\"updatedAt\\\":\\\"2018-12-15T12:20:09.423Z\\\",\\\"createdAt\\\":\\\"2018-12-15T12:20:09.493Z\\\",\\\"resetedPass\\\":false,\\\"_id\\\":\\\"5c14f1796e76ab22f8fa18ac\\\",\\\"fullname\\\":\\\"PtIqRq PoHiOq\\\",\\\"createdBy\\\":\\\"5c14f1666e76ab22f8fa18a9\\\"}}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\n  server\n  .post('/add/admin')\n  .set(\"ticket\",ticket)\n  .send(currentUser)\n  .expect(\"Content-type\",/json/)\n  .expect(200)\n  .end(function(err,res){\n      if(res.body){\n          res.status.should.equal(200);\n          done()\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify(currentUser)\n        });\n\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n      }\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "065cbdd6-60ec-44ec-bad7-eac416217b1b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "add new Admin",
            "fullTitle": "Testing  User add new Admin",
            "timedOut": false,
            "duration": 73,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"YoMhZe WbGaDu\\\",\\\"password\\\":\\\"&Jj8?Nb0!Gt5@Em4&Ug8\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"stackholder\\\":{\\\"role\\\":\\\"stackholder\\\",\\\"updatedAt\\\":\\\"2018-12-15T12:20:09.497Z\\\",\\\"createdAt\\\":\\\"2018-12-15T12:20:09.567Z\\\",\\\"resetedPass\\\":false,\\\"_id\\\":\\\"5c14f1796e76ab22f8fa18ad\\\",\\\"fullname\\\":\\\"YoMhZe WbGaDu\\\",\\\"createdBy\\\":\\\"5c14f1666e76ab22f8fa18a9\\\"}}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\n  server\n  .post('/add/stackholder')\n  .set(\"ticket\",ticket)\n  .send(currentUser)\n  .expect(\"Content-type\",/json/)\n  .expect(200)\n  .end(function(err,res){\n      if(res.body){\n          res.status.should.equal(200);\n          done()\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify(currentUser)\n        });\n\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n      }\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "22ef52be-3134-4b86-9e26-83e54509bffc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname Length too short",
            "fullTitle": "Testing  User should return invalid fullname Length too short",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"Ds\\\",\\\"password\\\":\\\"$Cl9%Sn0&Jc4%Aj4$Qo9\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=helper.generate(\"all-alpha\",2)\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n   if (res.body){  \n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "0eceb0a7-c491-4fd1-946e-99e2c1567b09",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname",
            "fullTitle": "Testing  User should return invalid fullname",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"uzdmly\\\",\\\"password\\\":\\\"$Sz2@Is5*Up0?Wa6!Do4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=helper.generate('lalpha',6)\n  server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body) {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n}\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2c3488cb-d7f3-439d-87b0-dd77ca21b4fb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname format",
            "fullTitle": "Testing  User should return invalid fullname format",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"@Yg6$Cc3$X\\\",\\\"password\\\":\\\"$Ug0&Cr5!Tg2%Ch0&Cw1\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\n      currentUser=generateUser()\n      currentUser.fullname=helper.generate(\"mix\",10)\n          server\n      .post('/login')\n      .send(currentUser)\n      .expect(\"Content-type\", /json/)\n      .expect(400)\n      .end(function (err, res) {\n        if (res.body){\n          res.status.should.equal(400)\n        done();\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify(currentUser)\n        });\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n        }\n      });",
            "err": {},
            "isRoot": false,
            "uuid": "48b05235-29cb-4a20-9f56-b21f120003e0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return required fullname",
            "fullTitle": "Testing  User should return required fullname",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"?Yl8*Ni9!Xf0&Cq7?Uc4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"missing params\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=undefined\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body)  {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f56307e9-c729-4cd8-ae67-619807cb4b31",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname length ",
            "fullTitle": "Testing  User should return invalid fullname length ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"rvsxlk yikdte foozby vacuyj rqcrvl zjwcwc qzbqzi gvlfzs nefqwk\\\",\\\"password\\\":\\\"&Ma5?Xu0%Ht1*Wq5*Cq5\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=helper.generate('lalpha',6) + \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)+ \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)+ \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)+ \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body) {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "4edca3dc-5fd0-4a61-a6b0-3a95eb9e4f35",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid user password length",
            "fullTitle": "Testing  User should return invalid user password length",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"ZaGiKr HoJqKx\\\",\\\"password\\\":\\\"@Bq8$\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"},{\\\"msg\\\":\\\"invalid length\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=helper.generate('mix',5)\n  \n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body){\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "47854527-2f6f-4176-987c-3caee4dd06f1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error user password required",
            "fullTitle": "Testing  User should return error user password required",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"FaFiWu EoXkNw\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"missing params\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=undefined\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body) {\n    res.status.should.equal(400)\n  done();\n      addContext(context, {\n        title: 'sent object',\n        value: JSON.stringify(currentUser)\n    });\n    addContext(context, {\n        title: 'response object',\n        value: JSON.stringify(res.body)\n    });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "75c77005-a7b7-4021-86c3-d2ffa0b96564",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error invalid user password format",
            "fullTitle": "Testing  User should return error invalid user password format",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"WqOlRm ZgBsQg\\\",\\\"password\\\":\\\"rqcebhpfhqkzkka\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=helper.generate(\"lalpha\",15)\n     \n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body)  {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f34af551-88a8-495a-ab0e-aaaa6444c3a8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error invalid user password format(numeric)",
            "fullTitle": "Testing  User should return error invalid user password format(numeric)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"AbBpQc MsVtXi\\\",\\\"password\\\":\\\"768752504859140\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=helper.generate(\"numeric\",15)\n\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body){\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f7b40cc0-ae17-4b21-b9e5-c73d8ede9eec",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid ticket won't reset Password",
            "fullTitle": "Testing  User should return invalid ticket won't reset Password",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"@Gq2?Ll1*Kn8?Ut9*Yp4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n    server\n    .post('/reset/password')\n    .set('ticket',ticket+1)\n    .send({\n        password: helper.generate('mix',20)\n    })\n    .expect(\"Content-type\", /json/)\n    .expect(401)\n    .end(function (err, res) {\n      \n      if (res){\n        // console.log(res.body);\n        \n        res.status.should.equal(401);\n      done();\n        addContext(context, {\n          title: 'sent object',\n          value: JSON.stringify({ \n            password: helper.generate('mix',20)\n          })\n      });\n      addContext(context, {\n          title: 'response object',\n          value: JSON.stringify({})\n      });\n      }\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "5921f690-7e7c-4296-91a0-c227efe6dd8d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid ticket won't add new admin",
            "fullTitle": "Testing  User should return invalid ticket won't add new admin",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"%La9!Ar3&Eg2?To6&Dj7\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n   currentUser=generateUser()\n   server\n   .post('/add/admin')\n   .set('ticket',ticket+1)\n   .send(currentUser)\n   .expect(\"Content-type\", /json/)\n   .expect(401)\n   .end(function (err, res) {\n     \n     if (res){\n       res.status.should.equal(401);\n     done();\n       addContext(context, {\n         title: 'sent object',\n         value: JSON.stringify({ \n           password: helper.generate('mix',20)\n         })\n     });\n     addContext(context, {\n         title: 'response object',\n         value: JSON.stringify({})\n     });\n     }\n   });",
            "err": {},
            "isRoot": false,
            "uuid": "f18ed892-1844-4192-b3fe-8ee6bd4cc349",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid ticket won't add new stackholder",
            "fullTitle": "Testing  User should return invalid ticket won't add new stackholder",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"?Il5!Bj4&Am2@Er5$Bc6\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n   currentUser=generateUser()\n  // console.log(currentUser);\n   \n   server\n   .post('/add/stackholder')\n   .set('ticket',ticket+1)\n   .send({currentUser})\n   .expect(\"Content-type\", /json/)\n   .expect(401)\n   .end(function (err, res) {\n     \n     if (res){\n       res.status.should.equal(401);\n     done();\n       addContext(context, {\n         title: 'sent object',\n         value: JSON.stringify({ \n           password: helper.generate('mix',20)\n         })\n     });\n     addContext(context, {\n         title: 'response object',\n         value: JSON.stringify({})\n     });\n     }\n   });",
            "err": {},
            "isRoot": false,
            "uuid": "4faefc46-87df-4ab8-9098-08e1f20ab0a6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "LogOut",
            "fullTitle": "Testing  User LogOut",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n\n  server\n  .post('/logout')\n  .set(\"ticket\",ticket)\n  .expect(\"Content-type\",/json/)\n  .expect(200)\n  .end(function(err,res){\n      if(res.body){\n          res.status.should.equal(200);\n          done()\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify({})\n        });\n\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n      }\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "c35af5a9-7f10-430b-b5dc-80f4073ad4b1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "LogOut should return error invalid ticket",
            "fullTitle": "Testing  User LogOut should return error invalid ticket",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n  server\n  .post('/logout')\n  .set(\"ticket\",ticket+1)\n  .expect(\"Content-type\",/json/)\n  .expect(401)\n  .end(function(err,res){\n      if(res){\n          res.status.should.equal(401);\n          done()\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify({})\n        });\n\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify({})\n        });\n      }\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "e609740d-369a-45c6-ae70-d0dd82624358",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "fe68e25b-305d-46db-9c8c-88326b574d53",
          "f91549f3-17d7-407b-b7be-b9a45cb0bbac",
          "065cbdd6-60ec-44ec-bad7-eac416217b1b",
          "22ef52be-3134-4b86-9e26-83e54509bffc",
          "0eceb0a7-c491-4fd1-946e-99e2c1567b09",
          "2c3488cb-d7f3-439d-87b0-dd77ca21b4fb",
          "48b05235-29cb-4a20-9f56-b21f120003e0",
          "f56307e9-c729-4cd8-ae67-619807cb4b31",
          "4edca3dc-5fd0-4a61-a6b0-3a95eb9e4f35",
          "47854527-2f6f-4176-987c-3caee4dd06f1",
          "75c77005-a7b7-4021-86c3-d2ffa0b96564",
          "f34af551-88a8-495a-ab0e-aaaa6444c3a8",
          "f7b40cc0-ae17-4b21-b9e5-c73d8ede9eec",
          "5921f690-7e7c-4296-91a0-c227efe6dd8d",
          "f18ed892-1844-4192-b3fe-8ee6bd4cc349",
          "4faefc46-87df-4ab8-9098-08e1f20ab0a6",
          "c35af5a9-7f10-430b-b5dc-80f4073ad4b1",
          "e609740d-369a-45c6-ae70-d0dd82624358"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 681,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}