{
  "stats": {
    "suites": 2,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2018-12-13T11:39:29.278Z",
    "end": "2018-12-13T11:39:29.974Z",
    "duration": 696,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "296af245-e682-4249-a678-9a599936144b",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "ac7859f2-d6f3-443c-9d3c-20d004a00c75",
        "title": "Testing  User",
        "fullFile": "/home/brightmoon/git/firewall/test/unit/user.js",
        "file": "/test/unit/user.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Login user",
            "fullTitle": "Testing  User Login user",
            "timedOut": false,
            "duration": 98,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"wafaa gamal\\\",\\\"password\\\":\\\"pass@2012\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"user\\\":{\\\"_id\\\":\\\"5c1244ef8bc9c260317cc09d\\\",\\\"fullname\\\":\\\"wafaa gamal\\\",\\\"__v\\\":0,\\\"resetedPass\\\":false,\\\"createdAt\\\":\\\"2018-12-13T11:39:27.233Z\\\",\\\"updatedAt\\\":\\\"2018-12-13T11:39:27.235Z\\\",\\\"role\\\":\\\"admin\\\"},\\\"ticket\\\":\\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjVjMTI0NGVmOGJjOWMyNjAzMTdjYzA5ZCIsInJvbGUiOiJhZG1pbiJ9LCJzZXNzaW9uIjp7InVybiI6OTYxMjMyNzQ2LCJleHAiOjE1NDcyOTMxNjkwMDAwMDAsImlhdCI6MTU0NDcwMTE2OTAwMDAwMH0sImlhdCI6MTU0NDcwMTE2OX0.mmuv1tGNFnGperj08t5migaUN_CjnNrQJAzURoMAdPM\\\"}\"\n  }\n]",
            "code": "var context=this\nserver  \n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(200)\n.end(function (err, res) {\n  if (res.body){\n    //console.log(res.body);\n    \n    ticket=res.body.ticket\n    res.status.should.equal(200);\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "478974e1-e7e6-4c98-80b1-54172ae3a4a1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "reset Password",
            "fullTitle": "Testing  User reset Password",
            "timedOut": false,
            "duration": 394,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"*Sd4!Ul6?Na4!Ov8?Th4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"\\\"successfully reseted\\\"\"\n  }\n]",
            "code": "var context=this\n//console.log(ticket);\n    server\n    .post('/reset/password')\n    .set('ticket',ticket)\n    .send({ \n password: helper.generate('mix',20)\n })\n    .expect(\"Content-type\", /json/)\n    .expect(200)\n    .end(function (err, res) {\nif (res.body) {\n// console.log(res.body);\n   res.status.should.equal(200);\n done();\n   addContext(context, {\n     title: 'sent object',\n     value: JSON.stringify({ \n       password: helper.generate('mix',20)\n     })\n });\n addContext(context, {\n     title: 'response object',\n     value: JSON.stringify(res.body)\n });\n }\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "e2b32cf3-6b9e-482c-a93e-df4213ae304e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "add new Admin",
            "fullTitle": "Testing  User add new Admin",
            "timedOut": false,
            "duration": 79,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"PhMhGc JzOjBt\\\",\\\"password\\\":\\\"@Wb7$So6@Ba0*Hg3@Yp0\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"newAdmin\\\":{\\\"createdBy\\\":\\\"5c1244ef8bc9c260317cc09d\\\",\\\"password\\\":\\\"$2a$10$aURCpqaqnGuR90RwcEwp5uJbXlg0BWwY5z8mgLGAUCGgmGE/y.26q\\\",\\\"fullname\\\":\\\"PhMhGc JzOjBt\\\",\\\"_id\\\":\\\"5c1244f18bc9c260317cc0a0\\\",\\\"resetedPass\\\":false,\\\"createdAt\\\":\\\"2018-12-13T11:39:29.861Z\\\",\\\"updatedAt\\\":\\\"2018-12-13T11:39:29.791Z\\\",\\\"role\\\":\\\"admin\\\"}}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\n  server\n  .post('/add/admin')\n  .set(\"ticket\",ticket)\n  .send(currentUser)\n  .expect(\"Content-type\",/json/)\n  .expect(200)\n  .end(function(err,res){\n      if(res.body){\n          res.status.should.equal(200);\n          done()\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify(currentUser)\n        });\n\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n      }\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "b2147772-6077-47ae-8e36-bb132950f50d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "add new Admin",
            "fullTitle": "Testing  User add new Admin",
            "timedOut": false,
            "duration": 78,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"XtJxIp EzOrIh\\\",\\\"password\\\":\\\"&Il0%Um5?Ni0!Bq3!Ht4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"newstackholder\\\":{\\\"createdBy\\\":\\\"5c1244ef8bc9c260317cc09d\\\",\\\"password\\\":\\\"$2a$10$T6yBXXPtQRtHDbLn3n4B4.3VIVPWjZwCRjiOaJr8/BKB8kgiChKFO\\\",\\\"fullname\\\":\\\"XtJxIp EzOrIh\\\",\\\"_id\\\":\\\"5c1244f18bc9c260317cc0a1\\\",\\\"resetedPass\\\":false,\\\"createdAt\\\":\\\"2018-12-13T11:39:29.940Z\\\",\\\"updatedAt\\\":\\\"2018-12-13T11:39:29.871Z\\\",\\\"role\\\":\\\"stackholder\\\"}}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\n  server\n  .post('/add/stackholder')\n  .set(\"ticket\",ticket)\n  .send(currentUser)\n  .expect(\"Content-type\",/json/)\n  .expect(200)\n  .end(function(err,res){\n      if(res.body){\n          res.status.should.equal(200);\n          done()\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify(currentUser)\n        });\n\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n      }\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "1f96d06d-caea-48c5-afcd-354ece91e3fa",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "478974e1-e7e6-4c98-80b1-54172ae3a4a1",
          "e2b32cf3-6b9e-482c-a93e-df4213ae304e",
          "b2147772-6077-47ae-8e36-bb132950f50d",
          "1f96d06d-caea-48c5-afcd-354ece91e3fa"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 649,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "502e3d02-0372-4abb-b870-86ea6778de8a",
        "title": "Testing for validation Create & Access route",
        "fullFile": "/home/brightmoon/git/firewall/test/unit/user.js",
        "file": "/test/unit/user.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return invalid fullname Length too short",
            "fullTitle": "Testing for validation Create & Access route should return invalid fullname Length too short",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"Se\\\",\\\"password\\\":\\\"*Eb4$El5@Kv6%Av3!Oc8\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=helper.generate(\"all-alpha\",2)\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n   if (res.body){  \n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a58423eb-0e63-4f74-9b04-b33af0f39cad",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname",
            "fullTitle": "Testing for validation Create & Access route should return invalid fullname",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"vrfjko\\\",\\\"password\\\":\\\"$Mh3!Xh1$Jy5!Pq5?Vp8\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=helper.generate('lalpha',6)\n  server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body) {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n}\n});",
            "err": {},
            "isRoot": false,
            "uuid": "83d17b02-bdbb-4a83-b740-a277e98dc107",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname format",
            "fullTitle": "Testing for validation Create & Access route should return invalid fullname format",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"%Qs0%Mg6$S\\\",\\\"password\\\":\\\"$Hn1$Xz8*Rt5*Bo0*Ya5\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\n      currentUser=generateUser()\n      currentUser.fullname=helper.generate(\"mix\",10)\n          server\n      .post('/login')\n      .send(currentUser)\n      .expect(\"Content-type\", /json/)\n      .expect(400)\n      .end(function (err, res) {\n        if (res.body){\n          res.status.should.equal(400)\n        done();\n          addContext(context, {\n            title: 'sent object',\n            value: JSON.stringify(currentUser)\n        });\n        addContext(context, {\n            title: 'response object',\n            value: JSON.stringify(res.body)\n        });\n        }\n      });",
            "err": {},
            "isRoot": false,
            "uuid": "0be77a60-132b-4bf4-95a9-c277ce025817",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return required fullname",
            "fullTitle": "Testing for validation Create & Access route should return required fullname",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"!Zz6*Bt7?Ex9?Am6!Pw0\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"missing params\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=undefined\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body)  {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ed6418f0-76bd-49f1-b9d7-be354772d511",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid fullname length ",
            "fullTitle": "Testing for validation Create & Access route should return invalid fullname length ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"jkoikl ocpefc ntxdqg xoziqv woxxwg tlunij eldurx lfrjov vplrvd\\\",\\\"password\\\":\\\"$Ku5&Du1?Lw2*Ec7@Sp4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"fullname\\\",\\\"label\\\":\\\"Fullname\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.fullname=helper.generate('lalpha',6) + \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)+ \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)+ \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)+ \" \" +helper.generate('lalpha',6)+\" \"+helper.generate('lalpha',6)\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body) {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "545f3d55-f921-4d02-bb55-9463bf6da677",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid user password length",
            "fullTitle": "Testing for validation Create & Access route should return invalid user password length",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"UfLeMe TmZjOn\\\",\\\"password\\\":\\\"@Jd6@\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"},{\\\"msg\\\":\\\"invalid length\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=helper.generate('mix',5)\n  \n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body){\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2c6cd139-fc7e-4c9e-b6d1-ec827e267c51",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error user password required",
            "fullTitle": "Testing for validation Create & Access route should return error user password required",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"LvThDu RtUvCk\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"missing params\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=undefined\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body) {\n    res.status.should.equal(400)\n  done();\n      addContext(context, {\n        title: 'sent object',\n        value: JSON.stringify(currentUser)\n    });\n    addContext(context, {\n        title: 'response object',\n        value: JSON.stringify(res.body)\n    });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c455823a-1e6b-4b81-bac3-d4a0323d7110",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error invalid user password format",
            "fullTitle": "Testing for validation Create & Access route should return error invalid user password format",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"IqMqSe ZzEaGg\\\",\\\"password\\\":\\\"vtfulrvneflutce\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=helper.generate(\"lalpha\",15)\n     \n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body)  {\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "36a51f15-b7f4-4364-b2f2-5cd0b4911e77",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return error invalid user password format(numeric)",
            "fullTitle": "Testing for validation Create & Access route should return error invalid user password format(numeric)",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"fullname\\\":\\\"WcTkHp ShMmAw\\\",\\\"password\\\":\\\"103574602921636\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{\\\"error\\\":[{\\\"msg\\\":\\\"invalid format\\\",\\\"param\\\":\\\"password\\\",\\\"label\\\":\\\"Password\\\"}]}\"\n  }\n]",
            "code": "var context=this\ncurrentUser=generateUser()\ncurrentUser.password=helper.generate(\"numeric\",15)\n\n    server\n.post('/login')\n.send(currentUser)\n.expect(\"Content-type\", /json/)\n.expect(400)\n.end(function (err, res) {\n  if (res.body){\n    res.status.should.equal(400)\n  done();\n    addContext(context, {\n      title: 'sent object',\n      value: JSON.stringify(currentUser)\n  });\n  addContext(context, {\n      title: 'response object',\n      value: JSON.stringify(res.body)\n  });\n  }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "6035e005-ab42-4e94-8f3b-faa3606f4865",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid ticket won't reset Password",
            "fullTitle": "Testing for validation Create & Access route should return invalid ticket won't reset Password",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"?Zc9*Lh0%Ab3!Wd5&Jq4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n    server\n    .post('/reset/password')\n    .set('ticket',ticket+1)\n    .send({\n        password: helper.generate('mix',20)\n    })\n    .expect(\"Content-type\", /json/)\n    .expect(401)\n    .end(function (err, res) {\n      \n      if (res){\n        // console.log(res.body);\n        \n        res.status.should.equal(401);\n      done();\n        addContext(context, {\n          title: 'sent object',\n          value: JSON.stringify({ \n            password: helper.generate('mix',20)\n          })\n      });\n      addContext(context, {\n          title: 'response object',\n          value: JSON.stringify({})\n      });\n      }\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "0cfc5f2a-f42c-4a85-8dc6-f443b81a55ae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid ticket won't add new admin",
            "fullTitle": "Testing for validation Create & Access route should return invalid ticket won't add new admin",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"?Uf2@Kd0%Oi7%Kr0@Kj4\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n   currentUser=generateUser()\n   server\n   .post('/add/admin')\n   .set('ticket',ticket+1)\n   .send(currentUser)\n   .expect(\"Content-type\", /json/)\n   .expect(401)\n   .end(function (err, res) {\n     \n     if (res){\n       res.status.should.equal(401);\n     done();\n       addContext(context, {\n         title: 'sent object',\n         value: JSON.stringify({ \n           password: helper.generate('mix',20)\n         })\n     });\n     addContext(context, {\n         title: 'response object',\n         value: JSON.stringify({})\n     });\n     }\n   });",
            "err": {},
            "isRoot": false,
            "uuid": "c57fcc08-7be3-44b9-8ba4-314c73704c8e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return invalid ticket won't add new stackholder",
            "fullTitle": "Testing for validation Create & Access route should return invalid ticket won't add new stackholder",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  {\n    \"title\": \"sent object\",\n    \"value\": \"{\\\"password\\\":\\\"$By3&Ho5!Nn4?Wn2&Yw6\\\"}\"\n  },\n  {\n    \"title\": \"response object\",\n    \"value\": \"{}\"\n  }\n]",
            "code": "var context=this\n   currentUser=generateUser()\n  // console.log(currentUser);\n   \n   server\n   .post('/add/stackholder')\n   .set('ticket',ticket+1)\n   .send({currentUser})\n   .expect(\"Content-type\", /json/)\n   .expect(401)\n   .end(function (err, res) {\n     \n     if (res){\n       res.status.should.equal(401);\n     done();\n       addContext(context, {\n         title: 'sent object',\n         value: JSON.stringify({ \n           password: helper.generate('mix',20)\n         })\n     });\n     addContext(context, {\n         title: 'response object',\n         value: JSON.stringify({})\n     });\n     }\n   });",
            "err": {},
            "isRoot": false,
            "uuid": "3eee3d25-330b-408e-8b90-10ef4f3014ac",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a58423eb-0e63-4f74-9b04-b33af0f39cad",
          "83d17b02-bdbb-4a83-b740-a277e98dc107",
          "0be77a60-132b-4bf4-95a9-c277ce025817",
          "ed6418f0-76bd-49f1-b9d7-be354772d511",
          "545f3d55-f921-4d02-bb55-9463bf6da677",
          "2c6cd139-fc7e-4c9e-b6d1-ec827e267c51",
          "c455823a-1e6b-4b81-bac3-d4a0323d7110",
          "36a51f15-b7f4-4364-b2f2-5cd0b4911e77",
          "6035e005-ab42-4e94-8f3b-faa3606f4865",
          "0cfc5f2a-f42c-4a85-8dc6-f443b81a55ae",
          "c57fcc08-7be3-44b9-8ba4-314c73704c8e",
          "3eee3d25-330b-408e-8b90-10ef4f3014ac"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 29,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}